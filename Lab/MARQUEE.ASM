
;=-=-=-=-=-= IC Body =-=-=-=-=-=
SNC26500
;=-=-=-=-=-= WAV file =-=-=-=-=-=
VOICE\SN0#XO.WAV
VOICE\SN1#XO.WAV
VOICE\SIL#XO.WAV

;VOICE\1a.wav

;=-=-=-=-=-= Include File =-=-=-=-=-=
PROGRAM
INCLUDE		VOICE\VOICE.INI
INCLUDE         SYSTEM\MACRO.asm
INCLUDE         SYSTEM\RAM.H   
;INCLUDE         SYSTEM\sub.asm 
;INCLUDE         Function\Random.asm 
;INCLUDE         Function\LED.asm 
;INCLUDE		KEY\KEY.ASM
;INCLUDE		KEY\Key_Function.asm
;INCLUDE         SYSTEM\OUT_VOICE.asm 



;=-=-=-=-=-= Reset Vector=-=-=-=-=-=-
start:
	rstcf

;=-=-=-=-=-=- Clear RAM -=-=-=-=-=-=-
	PAGE0
	CALL1	CLEAR_RAM
	PAGE1
	CALL1	CLEAR_RAM

	PAGE0
;=-=-=-=-=-=- System Set =-=-=-=-=-=-
	MOV A,#0110B	//B 3 
	MOV MODE,A	//B 2:1


;=-=-=-=- initial I/O PORT -=-=-=-=-=
	MOV A,#0000B
	MOV PIO_EN,A
	
	MOV	A,#1111B
	MOV 	P2S,A
	MOV	A,#0000B
	MOV 	A,P2


	MOV	A,#0000B
	MOV 	P3S,A
	MOV	A,#0000B
	MOV 	A,P3


	MOV	A,#0000B
	MOV 	P4S,A
	MOV	A,#0000B
	MOV 	A,P4


	MOV	A,#0000B
	MOV 	P5S,A
	MOV	A,#1111B
	MOV 	A,P5
 	
;=-=-=-=-=-=- Ram Initial -=-=-=-=-=-
	PAGE1		

	PAGE0
/*	MOV	A,#1000B
	MOV	LED_RAM1,A

	MOV	A,#0100B
	MOV	LED_RAM2,A

	MOV	A,#0010B
	MOV	LED_RAM3,A

	MOV	A,#0001B
	MOV	LED_RAM4,A	
*/		
	jmp	Main

;=-=-=-=-=- Wake Up Vector -=-=-=-=-=
trigger:
	

;=-=-=-=-=-=-=-= Main =-=-=-=-=-=-=-=
main:
	CJC	TIMER_2MS
	TIMER_2MS_RET:
;--------------------60HZ-------------------
	JMP F_60HZ
	F_60HZ_RET:

;---------------MARQUEE-----------------------
	JMP	SMARQUEE
	SMARQUEE_RET:
;----------------SCAN_LED--------------------
	JMP	SCAN_LED
	SCAN_LED_RET:

;-----------------KEY------------------------
/*	JMP	SCAN_KEY
	SCAN_KEY_RET:*/
;-----------------DIRECT_KEY------------------
	JMP	DIRECT_KEY
	DIRECT_KEY_RET:


	
main_end:
	jmp	Main

;==========================================
TIMER_2MS:
	RSTCF
	PAGE0

	MOV	A,#0000B
	XOR	A,P6_BUF
	MOV	P6_BUF,A
	MOV	P6,A
;------------------60HZ--------------------
	MOV 	A,R_60HZ_CNT
	INCA
	MOV 	R_60HZ_CNT,A
;--------------MARQOEE---------------------
	MOV	A,LED_RUNNING_TIMER
	INCA
	MOV	LED_RUNNING_TIMER,A
	
;-------------DIRECT_KEY_DEBOUNCE--------
	MOV	A,DEBOUNCE
	INCA
	MOV	DEBOUNCE,A

;-----===========---LED------============----
	MOV	A,LED_TIMER
	INCA
	MOV	LED_TIMER,A			
;--------------------SCAN_KEY---------------------
	MOV 	A,SCAN_DEBOUNCE
	INCA
	MOV	SCAN_DEBOUNCE,A
;-----------------------------------------------

TIMER_2MS_END:
	PAGE0
	JMP	TIMER_2MS_RET

;-----------------60HZ-------------------------

F_60HZ:
	PAGE0
	MOV	A,BIT_0
	AND	A,LED_FLAG	
	CAJE 	#0,F_60HZ_END

	MOV	A,R_60HZ_CNT
	CAJE	#4,F_60HZ_L
	JMP F_60HZ_END
F_60HZ_L:
	MOV A #0000B
	MOV R_60HZ_CNT,A
	
	MOV A,#0001B
	XOR A,P6_BUF
	MOV P6_BUF,A
	MOV P6,A
F_60HZ_END:
	PAGE0
	JMP F_60HZ_RET

;==============DIRECT_KEY======================

DIRECT_KEY:
	PAGE0
	MOV	A,P1
	MOV	NEW_KEY,A
	XOR	A,OLD_KEY
	
	MOV	TEMP0,A

	CAJE	#0,DEBOUNCE_FAIL

	MOV	A,DEBOUNCE
	CAJE	#15,CHECK_BIT0
	JMP	DEBOUNCE_WAIT

CHECK_BIT0:
	MOV	A,NEW_KEY
	XOR	A,OLD_KEY
	MOV	TEMP0,A

	MOV	A,BIT_0
	AND	A,TEMP0
	CAJE	#0,CHECK_BIT1

	MOV	A,BIT_0
	AND	A,NEW_KEY
	CAJE	BIT_0,BIT0_PRESS
	JMP	BIT0_RELASE

CHECK_BIT1:
	MOV	A,BIT_1
	AND	A,TEMP0
	CAJE	#0,CHECK_BIT2

	MOV	A,BIT_1
	AND	A,NEW_KEY
	CAJE	BIT_1,BIT2_PRESS
	JMP	BIT2_RELEASE
CHECK_BIT2:
	MOV	A,BIT_2
	AND	A,TEMP0
	CAJE	#0,CHECK_BIT3


	MOV	A,BIT_2
	AND	A,NEW_KEY
	CAJE	BIT_2,BIT2_PRESS
	JMP	BIT2_RELEASE
CHECK_BIT3:
	MOV	A,BIT_3
	AND	A,TEMP0
	CAJE	#0,CHECK_END

	MOV	A,BIT_3
	AND	A,NEW_KEY
	CAJE	BIT_3,BIT3_PRESS
	JMP	BIT3_RELEASE
CHECK_END:
;=========================================
	MOV	A,NEW_KEY
	MOV	OLD_KEY,A
;=========================================
DEBOUNCE_FAIL:
	MOV	A,#0
	MOV	DEBOUNCE,A

DEBOUNCE_WAIT:
DIRECT_KEY_END:
	PAGE0
	JMP	DIRECT_KEY_RET
		
;===========================================

BIT0_PRESS:
	PAGE0
	MOV	A,BIT_0
	OR	A,LED_FLAG
	MOV	LED_FLAG,A
		BIT0_PRESS_END:
			PAGE0
			JMP	CHECK_BIT1

BIT0_RELASE:
	MOV	A,#1110B
	AND	A,LED_FLAG
	MOV	LED_FLAG,A

	
	MOV	A,#1110B
	AND	A,P6_BUF
	MOV	P6_BUF,A
	MOV	P6,A

		BIT0_RELASE_END:
			PAGE0
			JMP	CHECK_BIT1

BIT1_PRESS:
	MOV	A,BIT_1
	OR	A,LED_RUNNING_FLAG
	MOV	LED_RUNNING_FLAG,A	
		BIT1_PRESS_END:
			PAGE0
			JMP	CHECK_BIT2
BIT1_RELASE:
	MOV	A,#1101B
	AND	A,LED_RUNNING_FLAG
	MOV	LED_RUNNING_FLAG,A

		
			BIT0_RELEASE_END:
			PAGE0		
			JMP	CHECK_BIT2
BIT2_PRESS:
	MOV	A,BIT_2
	OR	A,LED_FLAG
	MOV	LED_FLAG,A
		BIT2_PRESS_END:
			PAGE0
			JMP	CHECK_BIT3
BIT2_RELEASE:
	MOV	A,#1011B
	AND	A,LED_FLAG
	MOV	LED_FLAG,A
		BIT2_RELEASE_END:
			PAGE0
			JMP	CHECK_BIT3
BIT3_PRESS:
	MOV	A,BIT_3
	OR	A,LED_FLAG
	MOV	LED_FLAG,A
		BIT3_PRESS_END:
			PAGE0
			JMP	DIRECT_KEY_END
BIT3_RELEASE:
	MOV	A,#0111B
	AND	A,LED_FLAG
	MOV	LED_FLAG,A
		BIT3_RELEASE_END:
			PAGE0
			JMP	DIRECT_KEY_END
;======================SMARQUEE============================
SMARQUEE:
	PAGE0
	MOV	A,LED_RUNNING_TIMER
	CAJE	#15,LED_RUNNING_TIMER_L2
	JMP	SMARQUEE_END

/*LED_RUNNING_TIMER_L:
	MOV	A,#0
	MOV	LED_RUNNING_TIMER,A
	MOV	A,LED_RUNNING_TIMER
	CAJE	#4,LED_RUNNING_TIMER_L2
	JMP	SMARQUEE_END
*/
LED_RUNNING_TIMER_L2:
	MOV	A,#0
	MOV	LED_RUNNING_TIMER,A

	MOV	A,LED_RUNNING_TIMER1
	INCA
	MOV	LED_RUNNING_TIMER1,A
	CAJE	#2,LED_RUNNING_START
	JMP	SMARQUEE_END
LED_RUNNING_START:
	MOV	A,#0
	MOV	LED_RUNNING_TIMER,A
	MOV	LED_RUNNING_TIMER1,A


	MOV	A,LED_RUNNING_RAM
	INCA
	MOV	LED_RUNNING_RAM,A


	CAJE	#1,LED_RUNNING_1
	CAJE	#2,LED_RUNNING_2
	CAJE	#3,LED_RUNNING_3	
	CAJE	#4,LED_RUNNING_4
	CAJE	#5,LED_RUNNING_5
	CAJE	#6,LED_RUNNING_6
	CAJE	#7,LED_RUNNING_7
	CAJE	#8,LED_RUNNING_8
	CAJE	#9,LED_RUNNING_9
	CAJE	#10,LED_RUNNING_10
	CAJE	#11,LED_RUNNING_11
	CAJE	#12,LED_RUNNING_12
	CAJE	#13,LED_RUNNING_13
	CAJE	#14,LED_RUNNING_14
	CAJE	#15,LED_RUNNING_15

LED_RUNNING_1:
	MOV	A,BIT_0
	MOV	LED_RAM1,A
	JMP	SMARQUEE_END	
LED_RUNNING_2:
	MOV	A,BIT_1
	MOV	LED_RAM1,A
	JMP	SMARQUEE_END
LED_RUNNING_3:
	MOV	A,BIT_2
	MOV	LED_RAM1,A
	JMP	SMARQUEE_END
LED_RUNNING_4:
	MOV	A,BIT_3
	MOV	LED_RAM1,A
	JMP	SMARQUEE_END
LED_RUNNING_5:
	MOV	A,#0
	MOV	LED_RAM1,A

	MOV	A,BIT_0
	MOV	LED_RAM2,A
	JMP	SMARQUEE_END
LED_RUNNING_6:
	MOV	A,BIT_1
	MOV	LED_RAM2,A
	JMP	SMARQUEE_END
LED_RUNNING_7:
	MOV	A,BIT_2
	MOV	LED_RAM2,A
	JMP	SMARQUEE_END
LED_RUNNING_8:
	MOV	A,BIT_3
	MOV	LED_RAM2,A
	JMP	SMARQUEE_END
LED_RUNNING_9:
	MOV	A,#0
	MOV	LED_RAM2,A
	
	MOV	A,BIT_0
	MOV	LED_RAM3,A
	JMP	SMARQUEE_END
LED_RUNNING_10:
	MOV	A,BIT_1
	MOV	LED_RAM3,A
	JMP	SMARQUEE_END
LED_RUNNING_11:
	MOV	A,BIT_2
	MOV	LED_RAM3,A
	JMP	SMARQUEE_END
LED_RUNNING_12:
	MOV	A,BIT_3
	MOV	LED_RAM3,A
	JMP	SMARQUEE_END
LED_RUNNING_13:
	MOV	A,#0
	MOV	LED_RAM3,A

	MOV	A,BIT_0
	MOV	LED_RAM4,A	
	JMP	SMARQUEE_END
LED_RUNNING_14:
	MOV	A,BIT_1
	MOV	LED_RAM4,A
	JMP	SMARQUEE_END
LED_RUNNING_15:
	MOV	A,BIT_2
	MOV	LED_RAM4,A
	JMP	SMARQUEE_END
LED_RUNNING_16:
	MOV	A,BIT_3
	MOV	LED_RAM4,A
	JMP	SMARQUEE_END
LED_RUNNING_OFF:
	MOV	A,#0
	MOV	LED_RUNNING_RAM,A
	JMP	SMARQUEE_END

SMARQUEE_END:
	JMP	SMARQUEE_RET	

;=================LED P4,P5=========================


SCAN_LED:
	PAGE0
	MOV 	A,LED_TIMER
	CAJE	#2,SCAN_LED_START
	JMP 	SCAN_LED_END

SCAN_LED_START:
	MOV	A,#0
	MOV	LED_TIMER,A
	MOV	A,SCAN_LED_FLAG
	CAJE	#0,LED_ROW1
	CAJE	#1,LED_ROW2
	CAJE	#2,LED_ROW3
	CAJE	#3,LED_ROW4
	MOV	A,#0
	MOV	SCAN_LED_FLAG,A
LED_ROW1:
	MOV	A,#1111B	;HIGH TO CLOSE THE SCNA
	MOV	P5,A		;CLOSE SCAN_LED,CLEAR AFTERIMAGE
	MOV	A,LED_RAM1
	MOV	P4,A
	MOV	A,#1110B		
	MOV	P5,A			
	MOV	A,SCAN_LED_FLAG
	INCA
	MOV 	SCAN_LED_FLAG,A	
	JMP	SCAN_LED_END
			
LED_ROW2:
	MOV	A,#1111B
	MOV	P5,A
	MOV	A,LED_RAM2
	MOV	P4,A
	MOV	A,#1101B		
	MOV	P5,A			
	MOV	A,SCAN_LED_FLAG
	INCA
	MOV 	SCAN_LED_FLAG,A
	JMP	SCAN_LED_END
LED_ROW3:
	MOV	A,#1111B
	MOV	P5,A	
	MOV	A,LED_RAM3
	MOV	P4,A
	MOV	A,#1011B		
	MOV	P5,A			
	MOV	A,SCAN_LED_FLAG
	INCA
	MOV 	SCAN_LED_FLAG,A
	JMP	SCAN_LED_END

LED_ROW4:
	MOV	A,#1111B
	MOV	P5,A		
	MOV	A,LED_RAM4
	MOV	P4,A
	MOV	A,#0111B		
	MOV	P5,A			
	MOV	A,SCAN_LED_FLAG
	INCA
	MOV 	SCAN_LED_FLAG,A
	JMP	SCAN_LED_END	
	
	
SCAN_LED_END:
	PAGE0	
	JMP	SCAN_LED_RET	


;=================SCAN_KEY====================
/*

SCAN_KEY:
	PAGE0
	MOV	A,SCAN_KEY_COUNT
	CAJE	#0,SCAN_KEY_ROW1
	CAJE	#1,SCAN_KEY_ROW2
	CAJE	#2,SCAN_KEY_ROW3
	CAJE	#3,SCAN_KEY_ROW4

	MOV	A,#0
	MOV	SCAN_KEY_COUNT,A
;=================================================
SCAN_KEY_ROW1:


	MOV	A,P1
	MOV	SCAN_NEW_KEY,A
	XOR	A,SCAN_OLD_KEY1
	
	MOV	SCAN_TEMP,A
	CAJE	#0,SCAN_KEY_INC_OUT

	MOV	A,SCAN_DEBOUNCE
	CAJE	#15,SCAN_KEY_ROW1_OK
	JMP	SCAN_DEBOUNCE_WAIT
SCAN_KEY_ROW1_OK:

/*	MOV	A,BIT_0
	XOR	A,SCAN_OLD_KEY1
	MOV	SCAN_TEMP,A
*//*
		MOV	A,BIT_0
		AND	A,SCAN_TEMP
		CAJE	#0,SCAN_KEY_ROW11_CHECK
	
		MOV	A,BIT_0
		AND	A,SCAN_NEW_KEY
		CAJE	BIT_0,KEY_ROW_10_PRESS
		JMP	KEY_ROW_10_RELEASE
	
     SCAN_KEY_ROW11_CHECK:
		MOV	A,BIT_1
		AND	A,SCAN_TEMP
		CAJE	#0,SCAN_KEY_ROW12_CHECK

		MOV	A,BIT_1
		AND	A,SCAN_NEW_KEY
		CAJE	BIT_1,KEY_ROW_11_PRESS
		JMP	KEY_ROW_11_RELEASE
     SCAN_KEY_ROW12_CHECK:		
		MOV	A,BIT_2
		AND	A,SCAN_TEMP
		CAJE	#0,SCAN_KEY_ROW13_CHECK

		MOV	A,BIT_2
		AND	A,SCAN_NEW_KEY
		CAJE	BIT_1,KEY_ROW_12_PRESS
		JMP	KEY_ROW_12_RELEASE
     SCAN_KEY_ROW13_CHECK:
		MOV	A,BIT_3
		AND	A,SCAN_TEMP
		CAJE	#0,SCAN_KEY_ROW14_CHECK

		MOV	A,BIT_3
		AND	A,SCAN_NEW_KEY
		CAJE	BIT_1,KEY_ROW_13_PRESS
		JMP	KEY_ROW_13_RELEASE
     SCAN_KEY_ROW14_CHECK:

	MOV	A,SCAN_NEW_KEY
	MOV	SCAN_OLD_KEY1,A		

	JMP	SCAN_KEY_INC_OUT
;=================================================
SCAN_KEY_ROW2:

	MOV	A,P1
	MOV	SCAN_NEW_KEY,A
	XOR	A,SCAN_OLD_KEY2
	
	MOV	SCAN_TEMP,A
	CAJE	#0,SCAN_KEY_INC_OUT

	MOV	A,SCAN_DEBOUNCE
	CAJE	#15,SCAN_KEY_ROW2_OK
	JMP	SCAN_DEBOUNCE_WAIT
SCAN_KEY_ROW2_OK:


/*	MOV	A,BIT_0
	XOR	A,SCAN_OLD_KEY2
	MOV	SCAN_TEMP,A
*//*
		MOV	A,BIT_0
		AND	A,SCAN_TEMP
		CAJE	#0,SCAN_KEY_ROW21_CHECK
	
		MOV	A,BIT_0
		AND	A,SCAN_NEW_KEY
		CAJE	BIT_0,KEY_ROW_20_PRESS
		JMP	KEY_ROW_20_RELEASE
	
     SCAN_KEY_ROW21_CHECK:
		MOV	A,BIT_1
		AND	A,SCAN_TEMP
		CAJE	#0,SCAN_KEY_ROW22_CHECK

		MOV	A,BIT_1
		AND	A,SCAN_NEW_KEY
		CAJE	BIT_1,KEY_ROW_21_PRESS
		JMP	KEY_ROW_21_RELEASE
     SCAN_KEY_ROW22_CHECK:		
		MOV	A,BIT_2
		AND	A,SCAN_TEMP
		CAJE	#0,SCAN_KEY_ROW23_CHECK

		MOV	A,BIT_2
		AND	A,SCAN_NEW_KEY
		CAJE	BIT_1,KEY_ROW_22_PRESS
		JMP	KEY_ROW_22_RELEASE
     SCAN_KEY_ROW23_CHECK:
		MOV	A,BIT_3
		AND	A,SCAN_TEMP
		CAJE	#0,SCAN_KEY_ROW24_CHECK

		MOV	A,BIT_3
		AND	A,SCAN_NEW_KEY
		CAJE	BIT_1,KEY_ROW_23_PRESS
		JMP	KEY_ROW_23_RELEASE
     SCAN_KEY_ROW24_CHECK:

	MOV	A,SCAN_NEW_KEY
	MOV	SCAN_OLD_KEY2,A		

	JMP	SCAN_KEY_INC_OUT

;============================================================================

SCAN_KEY_ROW3:

	MOV	A,P1
	MOV	SCAN_NEW_KEY,A
	XOR	A,SCAN_OLD_KEY3
	
	MOV	SCAN_TEMP,A
	CAJE	#0,SCAN_KEY_INC_OUT

	MOV	A,SCAN_DEBOUNCE
	CAJE	#15,SCAN_KEY_ROW3_OK
	JMP	SCAN_DEBOUNCE_WAIT
SCAN_KEY_ROW3_OK:

/*	MOV	A,BIT_0
	XOR	A,SCAN_OLD_KEY3
	MOV	SCAN_TEMP,A
*//*
		MOV	A,BIT_0
		AND	A,SCAN_TEMP
		CAJE	#0,SCAN_KEY_ROW31_CHECK
	
		MOV	A,BIT_0
		AND	A,SCAN_NEW_KEY
		CAJE	BIT_0,KEY_ROW_30_PRESS
		JMP	KEY_ROW_30_RELEASE
	
     SCAN_KEY_ROW31_CHECK:
		MOV	A,BIT_1
		AND	A,SCAN_TEMP
		CAJE	#0,SCAN_KEY_ROW32_CHECK

		MOV	A,BIT_1
		AND	A,SCAN_NEW_KEY
		CAJE	BIT_1,KEY_ROW_31_PRESS
		JMP	KEY_ROW_31_RELEASE
     SCAN_KEY_ROW32_CHECK:		
		MOV	A,BIT_2
		AND	A,SCAN_TEMP
		CAJE	#0,SCAN_KEY_ROW33_CHECK

		MOV	A,BIT_2
		AND	A,SCAN_NEW_KEY
		CAJE	BIT_1,KEY_ROW_32_PRESS
		JMP	KEY_ROW_32_RELEASE
     SCAN_KEY_ROW33_CHECK:
		MOV	A,BIT_3
		AND	A,SCAN_TEMP
		CAJE	#0,SCAN_KEY_ROW34_CHECK

		MOV	A,BIT_3
		AND	A,SCAN_NEW_KEY
		CAJE	BIT_1,KEY_ROW_33_PRESS
		JMP	KEY_ROW_33_RELEASE
     SCAN_KEY_ROW34_CHECK:

	MOV	A,SCAN_NEW_KEY
	MOV	SCAN_OLD_KEY3,A		

	JMP	SCAN_KEY_INC_OUT

;===========================================================	
SCAN_KEY_ROW4:	

	MOV	A,P1
	MOV	SCAN_NEW_KEY,A
	XOR	A,SCAN_OLD_KEY4
	
	MOV	SCAN_TEMP,A
	CAJE	#0,SCAN_KEY_INC_OUT

	MOV	A,SCAN_DEBOUNCE
	CAJE	#15,SCAN_KEY_ROW4_OK
	JMP	SCAN_DEBOUNCE_WAIT
SCAN_KEY_ROW4_OK:

/*	MOV	A,BIT_0
	XOR	A,SCAN_OLD_KEY4
	MOV	SCAN_TEMP,A
*//*
		MOV	A,BIT_0
		AND	A,SCAN_TEMP
		CAJE	#0,SCAN_KEY_ROW41_CHECK
	
		MOV	A,BIT_0
		AND	A,SCAN_NEW_KEY
		CAJE	BIT_0,KEY_ROW_40_PRESS
		JMP	KEY_ROW_40_RELEASE
	
     SCAN_KEY_ROW41_CHECK:
		MOV	A,BIT_1
		AND	A,SCAN_TEMP
		CAJE	#0,SCAN_KEY_ROW42_CHECK

		MOV	A,BIT_1
		AND	A,SCAN_NEW_KEY
		CAJE	BIT_1,KEY_ROW_41_PRESS
		JMP	KEY_ROW_41_RELEASE
     SCAN_KEY_ROW42_CHECK:		
		MOV	A,BIT_2
		AND	A,SCAN_TEMP
		CAJE	#0,SCAN_KEY_ROW43_CHECK

		MOV	A,BIT_2
		AND	A,SCAN_NEW_KEY
		CAJE	BIT_1,KEY_ROW_42_PRESS
		JMP	KEY_ROW_42_RELEASE
     SCAN_KEY_ROW43_CHECK:
		MOV	A,BIT_3
		AND	A,SCAN_TEMP
		CAJE	#0,SCAN_KEY_ROW44_CHECK

		MOV	A,BIT_3
		AND	A,SCAN_NEW_KEY
		CAJE	BIT_1,KEY_ROW_43_PRESS
		JMP	KEY_ROW_43_RELEASE
     SCAN_KEY_ROW44_CHECK:

	MOV	A,SCAN_NEW_KEY
	MOV	SCAN_OLD_KEY4,A		

	JMP	SCAN_KEY_INC_OUT

;===========================================================
SCAN_KEY_INC_OUT:


	CALL1	INC_SCAN_LINE


	PAGE0
	MOV	A,#0
	MOV	SCAN_DEBOUNCE,A		
SCAN_DEBOUNCE_WAIT:

SCAN_KEY_END:
	PAGE0
	JMP	SCAN_KEY_RET


INC_SCAN_LINE:
	PAGE0
	MOV	A,SCAN_KEY_COUNT
	INCA	
	MOV	SCAN_KEY_COUNT,A

	MOV	A,SCAN_KEY_COUNT
	CAJE	#1,SCAN_LINE_ROW1
	CAJE	#2,SCAN_LINE_ROW2
	CAJE	#3,SCAN_LINE_ROW3
	CAJE	#4,SCAN_LINE_ROW4
	MOV	A,#0
	MOV	SCAN_KEY_COUNT,A

SCAN_LINE_ROW1:

	MOV	A,#0001B
	MOV	P2_BUF,A
	MOV	P2,A
	JMP	INC_SCAN_LINE_END
SCAN_LINE_ROW2:
	MOV	A,#0010B
	MOV	P2_BUF,A
	MOV	P2,A
	JMP	INC_SCAN_LINE_END
SCAN_LINE_ROW3:
	MOV	A,#0100B
	MOV	P2_BUF,A
	MOV	P2,A
	JMP	INC_SCAN_LINE_END
SCAN_LINE_ROW4:	
	MOV	A,#1000B
	MOV	P2_BUF,A
	MOV	P2,A
	JMP	INC_SCAN_LINE_END
INC_SCAN_LINE_END:
	PAGE0
	RET1	
*/
;===========================================================

	


;===========================================================
CLEAR_RAM:

	MOV	A,#0
	MOV	M0,A
	MOV	M1,A
	MOV	M2,A
	MOV	M3,A	
	MOV	M4,A
	MOV	M5,A
	MOV	M6,A
	MOV	M7,A
	MOV	M8,A
	MOV	M9,A
	MOV	M10,A
	MOV	M11,A
	MOV	M12,A
	MOV	M13,A
	MOV	M14,A
	MOV	M15,A
	MOV	M16,A
	MOV	A,#0
	MOV	M17,A
	MOV	A,#0
	MOV	M18,A
	MOV	A,#0
	MOV	M19,A
	MOV	A,#0
	MOV	M20,A
	MOV	A,#0
	MOV	M21,A
	MOV	A,#0
	MOV	M22,A
	MOV	A,#0
	MOV	M23,A
	MOV	A,#0
	MOV	M24,A
	MOV	A,#0
	MOV	M25,A
	MOV	A,#0
	MOV	M26,A
	MOV	A,#0
	MOV	M27,A
	MOV	A,#0
	MOV	M28,A
	MOV	A,#0
	MOV	M29,A
	MOV	A,#0
	MOV	M30,A
	MOV	A,#0
	MOV	M31,A
	MOV	A,#0
	MOV	M32,A
	MOV	A,#0
	MOV	M33,A
	MOV	A,#0
	MOV	M34,A
	MOV	A,#0
	MOV	M35,A
	MOV	A,#0
	MOV	M36,A
	MOV	A,#0
	MOV	M37,A
	MOV	A,#0
	MOV	M38,A
	MOV	A,#0
	MOV	M39,A
	MOV	A,#0
	MOV	M40,A
	MOV	A,#0
	MOV	M41,A
	MOV	A,#0
	MOV	M42,A
	MOV	A,#0
	MOV	M43,A
	MOV	A,#0
	MOV	M44,A
	MOV	A,#0
	MOV	M45,A
	MOV	A,#0
	MOV	M46,A
	MOV	A,#0
	MOV	M47,A
	MOV	A,#0
	MOV	M48,A
	MOV	A,#0
	MOV	M49,A
	MOV	A,#0
	MOV	M50,A
	MOV	A,#0
	MOV	M51,A
	MOV	A,#0
	MOV	M52,A
	MOV	A,#0
	MOV	M53,A
	MOV	A,#0
	MOV	M54,A
	MOV	A,#0
	MOV	M55,A
	MOV	A,#0
	MOV	M56,A
	MOV	A,#0
	MOV	M57,A
	MOV	A,#0
	MOV	M58,A
	MOV	A,#0
	MOV	M59,A
	MOV	A,#0
	MOV	M60,A
	MOV	A,#0
	MOV	M61,A
	MOV	A,#0
	MOV	M62,A
	MOV	A,#0
	MOV	M63,A
	RET1
;=========================ROW1_KEY 00 ============================
/*KEY_ROW_10_PRESS:
	PAGE0
	MOV	A,BIT_0
	OR	A,LED_RAM1
	MOV	LED_RAM1,A
	JMP	SCAN_KEY_ROW11_CHECK
KEY_ROW_10_RELEASE:
	MOV	A,#1110B
	AND	A,LED_RAM1
	MOV	LED_RAM1,A
	

	JMP	SCAN_KEY_ROW11_CHECK
;========================= ROW1_KEY 01 ============================
KEY_ROW_11_PRESS:
	PAGE0
	MOV	A,BIT_1
	OR	A,LED_RAM1
	MOV	LED_RAM1,A
	JMP	SCAN_KEY_ROW12_CHECK
KEY_ROW_11_RELEASE:
	MOV	A,#1101B
	AND	A,LED_RAM1
	MOV	LED_RAM1,A
	
	JMP	SCAN_KEY_ROW12_CHECK
;========================= ROW1_KEY 02 ============================
KEY_ROW_12_PRESS:	
	PAGE0
	MOV	A,BIT_2
	OR	A,LED_RAM1
	MOV	LED_RAM1,A

	JMP	SCAN_KEY_ROW13_CHECK
KEY_ROW_12_RELEASE:
	PAGE0
	MOV	A,#1011B
	AND	A,LED_RAM1
	MOV	LED_RAM1,A	

	JMP	SCAN_KEY_ROW13_CHECK
;========================= ROW1_KEY 03 ============================
KEY_ROW_13_PRESS:
	PAGE0
	MOV	A,BIT_3
	OR	A,LED_RAM1
	MOV	LED_RAM1,A
	JMP	SCAN_KEY_ROW14_CHECK
KEY_ROW_13_RELEASE:
	PAGE0
	MOV	A,#0111B
	AND	A,LED_RAM1
	MOV	LED_RAM1,A	
	JMP	SCAN_KEY_ROW14_CHECK
;================================================================
;=========================ROW2_KEY 00 ============================
KEY_ROW_20_PRESS:
	PAGE0
	MOV	A,BIT_0
	OR	A,LED_RAM2
	MOV	LED_RAM2,A
	JMP	SCAN_KEY_ROW21_CHECK
KEY_ROW_20_RELEASE:
	MOV	A,#1110B
	AND	A,LED_RAM2
	MOV	LED_RAM2,A
	
	JMP	SCAN_KEY_ROW21_CHECK


;========================= ROW2_KEY 01 ============================
KEY_ROW_21_PRESS:
	PAGE0
	MOV	A,BIT_1
	OR	A,LED_RAM2
	MOV	LED_RAM2,A
	JMP	SCAN_KEY_ROW22_CHECK
KEY_ROW_21_RELEASE:
	MOV	A,#1101B
	AND	A,LED_RAM2
	MOV	LED_RAM2,A
	



	JMP	SCAN_KEY_ROW22_CHECK
;========================= ROW2_KEY 02 ============================
KEY_ROW_22_PRESS:
	PAGE0
	MOV	A,BIT_2
	OR	A,LED_RAM2
	MOV	LED_RAM2,A
	JMP	SCAN_KEY_ROW23_CHECK
KEY_ROW_22_RELEASE:
	MOV	A,#1011B
	AND	A,LED_RAM2
	MOV	LED_RAM2,A


	JMP	SCAN_KEY_ROW23_CHECK
;========================= ROW2_KEY 03 ============================
KEY_ROW_23_PRESS:
	PAGE0
	MOV	A,BIT_3
	OR	A,LED_RAM2
	MOV	LED_RAM2,A
	JMP	SCAN_KEY_ROW24_CHECK
KEY_ROW_23_RELEASE:
	MOV	A,#0111B
	AND	A,LED_RAM2
	MOV	LED_RAM2,A

	JMP	SCAN_KEY_ROW24_CHECK

;=================================================================
;=========================ROW3_KEY 00 ============================
KEY_ROW_30_PRESS:
	PAGE0
	MOV	A,BIT_0
	OR	A,LED_RAM3
	MOV	LED_RAM3,A
	JMP	SCAN_KEY_ROW31_CHECK
KEY_ROW_30_RELEASE:
	MOV	A,#1110B
	AND	A,LED_RAM3
	MOV	LED_RAM3,A

	JMP	SCAN_KEY_ROW31_CHECK


;========================= ROW3_KEY 01 ============================
KEY_ROW_31_PRESS:
	PAGE0
	MOV	A,BIT_1
	OR	A,LED_RAM3
	MOV	LED_RAM3,A
	JMP	SCAN_KEY_ROW32_CHECK
KEY_ROW_31_RELEASE:
	MOV	A,#1101B
	AND	A,LED_RAM3
	MOV	LED_RAM3,A

	JMP	SCAN_KEY_ROW32_CHECK
;========================= ROW3_KEY 02 ============================
KEY_ROW_32_PRESS:
	PAGE0
	MOV	A,BIT_2
	OR	A,LED_RAM3
	MOV	LED_RAM3,A

	JMP	SCAN_KEY_ROW33_CHECK
KEY_ROW_32_RELEASE:
	MOV	A,#1011B
	AND	A,LED_RAM3
	MOV	LED_RAM3,A

	JMP	SCAN_KEY_ROW33_CHECK
;========================= ROW3_KEY 03 ============================
KEY_ROW_33_PRESS:
	PAGE0
	MOV	A,BIT_3
	OR	A,LED_RAM3
	MOV	LED_RAM3,A
	JMP	SCAN_KEY_ROW34_CHECK
KEY_ROW_33_RELEASE:	
	MOV	A,#0111B
	AND	A,LED_RAM3
	MOV	LED_RAM3,A

	JMP	SCAN_KEY_ROW34_CHECK

;=================================================================
;=========================ROW4_KEY 00 ============================
KEY_ROW_40_PRESS:
	PAGE0
	MOV	A,BIT_0
	OR	A,LED_RAM4
	MOV	LED_RAM4,A
	JMP	SCAN_KEY_ROW41_CHECK
KEY_ROW_40_RELEASE:
	MOV	A,#1110B
	AND	A,LED_RAM4
	MOV	LED_RAM4,A
	JMP	SCAN_KEY_ROW41_CHECK


;========================= ROW3_KEY 01 ============================
KEY_ROW_41_PRESS:
	PAGE0
	MOV	A,BIT_1
	OR	A,LED_RAM4
	MOV	LED_RAM4,A
	JMP	SCAN_KEY_ROW42_CHECK
KEY_ROW_41_RELEASE:
	MOV	A,#1101B
	AND	A,LED_RAM4
	MOV	LED_RAM4,A

	JMP	SCAN_KEY_ROW42_CHECK
;========================= ROW3_KEY 02 ============================
KEY_ROW_42_PRESS:
	PAGE0
	MOV	A,BIT_2
	OR	A,LED_RAM4
	MOV	LED_RAM4,A
	JMP	SCAN_KEY_ROW43_CHECK
KEY_ROW_42_RELEASE:
	MOV	A,#1011B
	AND	A,LED_RAM4
	MOV	LED_RAM4,A

	JMP	SCAN_KEY_ROW43_CHECK
;========================= ROW3_KEY 03 ============================
KEY_ROW_43_PRESS:
	PAGE0
	MOV	A,BIT_3
	OR	A,LED_RAM4
	MOV	LED_RAM4,A
	JMP	SCAN_KEY_ROW44_CHECK
KEY_ROW_43_RELEASE:
	MOV	A,#0111B
	AND	A,LED_RAM4
	MOV	LED_RAM4,A


	JMP	SCAN_KEY_ROW44_CHECK
*/